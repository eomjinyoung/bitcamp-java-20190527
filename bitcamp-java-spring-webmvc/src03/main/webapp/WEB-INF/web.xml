<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee
                      http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd"
  version="4.0" metadata-complete="false">

  <description>
    스프링 Web MVC 프레임워크 예제 테스트
  </description>

  <display-name>java-spring-webmvc</display-name>

  <!-- Spring Web MVC의 프론트 컨트롤러 역할을 수행할 서블릿을 지정한다. -->
  
  <!-- Java config 설정하기-->
  <!-- 예1) IoC 컨테이너의 설정을 자바 클래스 파일로 지정할 수 있다. 
       => XML 대신 Java 클래스로 설정하려면 DispatcherServlet의 
          기본 IoC 컨테이너를 교체해야 한다.
       => contextClass 라는 초기화 파라미터를 통해 
          ConfigurableWebApplicationContext 인터페이스를 구현한 
          IoC 컨테이너를 지정하라. 
       => contextConfigLocation 초기화 파라미터 값은 
          XML 파일의 경로 대신 자바 클래스 이름을 지정한다.-->
  <servlet>
    <servlet-name>app5</servlet-name>
    <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
    <init-param>
      <param-name>contextClass</param-name>
      <param-value>org.springframework.web.context.support.AnnotationConfigWebApplicationContext</param-value>
    </init-param>
    <init-param>
      <param-name>contextConfigLocation</param-name>
      <param-value>bitcamp.AppConfig</param-value>
    </init-param>
    <load-on-startup>1</load-on-startup>
  </servlet>
  
  <servlet-mapping>
    <servlet-name>app5</servlet-name>
    <url-pattern>/app5/*</url-pattern>
  </servlet-mapping>
  
  <!-- 예2) WebApplicationInitializer 구현체를 이용하여 DispatcherServlet 설정하기
       => bitcamp.WebApplicationInitializerImpl1 클래스 참조하라! -->
  
  <welcome-file-list>
    <welcome-file>index.html</welcome-file>
    <welcome-file>index.htm</welcome-file>
    <welcome-file>default.htm</welcome-file>
  </welcome-file-list>

</web-app>















