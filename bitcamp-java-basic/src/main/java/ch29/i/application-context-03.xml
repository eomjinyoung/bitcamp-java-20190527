<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd">
  
  <!-- component-scan 태그는 
       @Component, @Service, @Repository, @Controller, @RestController 애노테이션이 붙은 클래스를 찾아 
       인스턴스를 생성한다.
       => @Component : 일반 클래스에 대해 붙인다.
       => @Repository : DAO 역할을 수행하는 클래스에 대해 붙인다.
       => @Service : 비즈니스 로직을 수행하는 클래스에 대해 붙인다.
       => @Controller : MVC 구조에서 컨트롤러 역할을 하는 클래스에 대해 붙인다.
       => @RestController : MVC 구조에서 REST API 컨트롤러 역할을 하는 클래스에 대해 붙인다.
       
       이렇게 애노테이션으로 역할에 따라 클래스를 분류해두면 나중에 통제하기가 편하다. 
  -->
  <context:component-scan base-package="ch29.i">
    <context:exclude-filter type="regex" expression="ch29.i.sub1.*"/>
    <context:exclude-filter type="regex" expression="ch29.i.sub2.*"/>
    <context:exclude-filter type="regex" expression="ch29.i.sub3.*"/>
    <context:exclude-filter type="regex" expression="ch29.i.Car"/>
  </context:component-scan>
</beans>

















