<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd">
  
  <!-- @Autowired 애노테이션 뿐만 아니라 다른 여러 애노테이션을 처리할 
       BeanPostProcessor 클래스들을 한 번에 등록하기!
       => 스프링 IoC 컨테이너는 각 애노테이션을 처리할 BeanPostProcessor를 제공한다.
       => 문제는 각 애노테이션을 처리할 클래스를 암기해야 한다는 것이다.
       => 그래서 스프링 IoC 컨테이너는 이런 번거로움을 없애기 위해 
          특별한 태그를 제공한다.
       => 이 태그를 선언하면 스프링 IoC 컨테이너가 자동으로 해당 BeanPostProcessor 들을 생성한다.
          <annotation-config> 태그이다.
          이 태그는 context 네임스페이스 들어 있다. 
          이 태그를 사용하려면 먼저 context 네임스페이스를 선언해야 한다.
  -->
 
  <context:annotation-config/>  

  <bean id="c1" class="ch29.h.Car">
    <property name="maker" value="비트자동차"/>
    <property name="model" value="모델1"/>
    <property name="cc" value="1980"/>
    <property name="valve" value="16"/>
    <property name="auto" value="true"/>
  </bean>
  <bean id="c2" class="ch29.h.Car"/>
  <bean id="c3" class="ch29.h.Car"/>
  <bean id="c4" class="ch29.h.Car"/>
  
  <bean id="blackBox" class="ch29.h.BlackBox">
    <property name="maker" value="비트오토"/>
    <property name="model" value="오호라박스"/>
  </bean>
  
  
  
</beans>

















